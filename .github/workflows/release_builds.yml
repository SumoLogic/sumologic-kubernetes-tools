name: Release builds

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  extract-image-tag:
    runs-on: ubuntu-20.04
    outputs:
      build_tag: ${{ steps.extract_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
      - name: Extract tag
        id: extract_tag
        run: echo "tag=$(echo ${GITHUB_REF#refs/tags/v})" >> $GITHUB_OUTPUT
      - name: Print tag
        run: echo "Running release build for ${{ steps.extract_tag.outputs.tag }}"
  build-and-push-image:
    uses: ./.github/workflows/build_and_push_image.yml
    needs: extract-image-tag
    with:
      build_tag: ${{ needs.extract-image-tag.outputs.build_tag }}
      tag_latest: true
      suffix: tools
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_LOGIN }}
      DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  build-and-push-image-kubectl:
    uses: ./.github/workflows/build_and_push_image.yml
    needs: extract-image-tag
    with:
      build_tag: ${{ needs.extract-image-tag.outputs.build_tag }}
      tag_latest: true
      suffix: kubectl
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_LOGIN_KUBECTL }}
      DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD_KUBECTL }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_KUBECTL }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_KUBECTL }}
  build-and-push-image-sumologic-mock:
    uses: ./.github/workflows/build_and_push_image.yml
    needs: extract-image-tag
    with:
      build_tag: ${{ needs.extract-image-tag.outputs.build_tag }}
      tag_latest: true
      suffix: sumologic-mock
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_LOGIN_SUMOLOGIC_MOCK }}
      DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD_SUMOLOGIC_MOCK }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_SUMOLOGIC_MOCK }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_SUMOLOGIC_MOCK }}
  build-binaries:
    uses: ./.github/workflows/build_binaries.yml
  create-release:
    name: Create Github release
    runs-on: ubuntu-20.04
    needs:
      - build-binaries
      - extract-image-tag
    steps:
      - name: Print tag
        run: echo "v${{ needs.extract-image-tag.outputs.build_tag }}"
      - name: Download all binaries stored as artifact
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
      - uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          prerelease: false
          allowUpdates: true
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          body: |
            ## v${{ needs.extract-image-tag.outputs.build_tag }}
          artifacts: "artifacts/*/*"
          artifactErrorsFailBuild: true
          replacesArtifacts: true
